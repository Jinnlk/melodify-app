{"ast":null,"code":"var _jsxFileName = \"/Users/jinnsonlim/Desktop/fullstack-decal/melodify-app/melodify/frontend/src/components/Recommendation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../css/Recommendation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recommendation() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [songs, setSongs] = useState([]);\n  const fetchRecommendations = async () => {\n    try {\n      const response = await axios.get(`/api/spotify/search?q=${query}`);\n      setSongs(response.data);\n    } catch (error) {\n      console.error('Error fetching songs:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendation\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"insert a song to get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"song name...\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchRecommendations,\n        children: \"generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"you might like these\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.albumArt,\n          alt: `${song.name} album art`,\n          className: \"album-art\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: song.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(Recommendation, \"ssM50z2MPeWDC2cQgdVYYMwnPEk=\");\n_c = Recommendation;\nexport default Recommendation;\nvar _c;\n$RefreshReg$(_c, \"Recommendation\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Recommendation","_s","query","setQuery","songs","setSongs","fetchRecommendations","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","song","index","src","albumArt","alt","name","artist","_c","$RefreshReg$"],"sources":["/Users/jinnsonlim/Desktop/fullstack-decal/melodify-app/melodify/frontend/src/components/Recommendation.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport '../css/Recommendation.css';\n\nfunction Recommendation() {\n    const [query, setQuery] = useState('');\n    const [songs, setSongs] = useState([]);\n\n    const fetchRecommendations = async () => {\n        try {\n            const response = await axios.get(`/api/spotify/search?q=${query}`);\n            setSongs(response.data);\n        } catch (error) {\n            console.error('Error fetching songs:', error);\n        }\n    };\n\n    return (\n        <div className=\"recommendation\">\n            <h1>insert a song to get started!</h1>\n            <div className=\"search-bar\">\n                <input\n                    type=\"text\"\n                    placeholder=\"song name...\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)}\n                />\n                <button onClick={fetchRecommendations}>generate</button>\n            </div>\n            <div className=\"results\">\n                <h2>you might like these</h2>\n                {songs.map((song, index) => (\n                    <div key={index} className=\"song-card\">\n                        <img\n                            src={song.albumArt}\n                            alt={`${song.name} album art`}\n                            className=\"album-art\"\n                        />\n                        <div>\n                            <h3>{song.name}</h3>\n                            <p>{song.artist}</p>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Recommendation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}