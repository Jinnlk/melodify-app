{"ast":null,"code":"var _jsxFileName = \"/Users/jinnsonlim/Desktop/fullstack-decal/melodify-app/melodify/frontend/src/components/Recommendation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recommendation() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [songs, setSongs] = useState([]);\n  const fetchRecommendations = async () => {\n    try {\n      const response = await axios.get('/api/spotify/search', {\n        params: {\n          q: query\n        }\n      });\n      setSongs(response.data);\n    } catch (error) {\n      console.error('Error fetching songs:', error.message);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchRecommendations();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Insert a song to get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Search for a song\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"You might like these\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"song-name\",\n            children: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"song-artist\",\n            children: [\"By \", song.artist]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Recommendation, \"ssM50z2MPeWDC2cQgdVYYMwnPEk=\");\n_c = Recommendation;\nexport default Recommendation;\nvar _c;\n$RefreshReg$(_c, \"Recommendation\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Recommendation","_s","query","setQuery","songs","setSongs","fetchRecommendations","response","get","params","q","data","error","console","message","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","map","song","index","name","artist","_c","$RefreshReg$"],"sources":["/Users/jinnsonlim/Desktop/fullstack-decal/melodify-app/melodify/frontend/src/components/Recommendation.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction Recommendation() {\n    const [query, setQuery] = useState('');\n    const [songs, setSongs] = useState([]);\n\n    const fetchRecommendations = async () => {\n        try {\n            const response = await axios.get('/api/spotify/search', {\n                params: { q: query },\n            });\n            setSongs(response.data);\n        } catch (error) {\n            console.error('Error fetching songs:', error.message);\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetchRecommendations();\n    };\n\n    return (\n        <div className=\"recommendation-container\">\n            <h1>Insert a song to get started!</h1>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)}\n                    placeholder=\"Search for a song\"\n                    className=\"search-input\"\n                />\n                <button type=\"submit\" className=\"search-button\">Generate</button>\n            </form>\n            <h2>You might like these</h2>\n            <div className=\"song-list\">\n                {songs.map((song, index) => (\n                    <div key={index} className=\"song-card\">\n                        <div className=\"song-details\">\n                            <p className=\"song-name\">{song.name}</p>\n                            <p className=\"song-artist\">By {song.artist}</p>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Recommendation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,qBAAqB,EAAE;QACpDC,MAAM,EAAE;UAAEC,CAAC,EAAER;QAAM;MACvB,CAAC,CAAC;MACFG,QAAQ,CAACE,QAAQ,CAACI,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACzD;EACJ,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBX,oBAAoB,CAAC,CAAC;EAC1B,CAAC;EAED,oBACIP,OAAA;IAAKmB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACrCpB,OAAA;MAAAoB,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCxB,OAAA;MAAMyB,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBACzBpB,OAAA;QACI0B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAExB,KAAM;QACbyB,QAAQ,EAAGX,CAAC,IAAKb,QAAQ,CAACa,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,mBAAmB;QAC/BX,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFxB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eACPxB,OAAA;MAAAoB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BxB,OAAA;MAAKmB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBf,KAAK,CAAC0B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBjC,OAAA;QAAiBmB,SAAS,EAAC,WAAW;QAAAC,QAAA,eAClCpB,OAAA;UAAKmB,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACzBpB,OAAA;YAAGmB,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEY,IAAI,CAACE;UAAI;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxCxB,OAAA;YAAGmB,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAC,KAAG,EAACY,IAAI,CAACG,MAAM;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C;MAAC,GAJAS,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACtB,EAAA,CA9CQD,cAAc;AAAAmC,EAAA,GAAdnC,cAAc;AAgDvB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}